services:
  minio:
    image: minio/minio:RELEASE.2024-10-02T17-50-41Z
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${ASUSTORE_MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${ASUSTORE_MINIO_ROOT_PASSWORD}
      MINIO_DOMAIN: ${ASUSTORE_MINIO_DOMAIN}
      MINIO_DEFAULT_BUCKETS: ${ASUSTORE_MINIO_BUCKETS}
    user: "0:0"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /volume1/Docker/minio/data:/data
    command: minio server /data --console-address ':9001'
    networks:
      - intro-network

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: /bin/bash
    environment:
      MINIO_BUCKETS: ${ASUSTORE_MINIO_DEFAULT_BUCKETS} # Comma-separated list of buckets
      MINIO_ACCESS_KEY: ${ASUSTORE_MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${ASUSTORE_MINIO_ROOT_PASSWORD}
    command: >
      -c "
      echo ""Buckets: $$MINIO_BUCKETS"";
      echo 'Check if MinIO is up';
      until mc alias set myminio http://minio:9000 $$MINIO_ACCESS_KEY $$MINIO_SECRET_KEY; do
        echo 'Waiting for MinIO to start...' && sleep 0.1;
      done;
      sleep 5;
      if [ -z \"$$MINIO_BUCKETS\" ]; then
        echo 'No buckets defined in MINIO_BUCKETS';
        exit 1;
      fi;
      IFS=',' read -ra BUCKETS <<< \"$$MINIO_BUCKETS\";
      for BUCKET in \"\$${BUCKETS[@]}\"; do
        echo \"Processing bucket: $$BUCKET\";
        if ! mc ls myminio/\$$BUCKET > /dev/null 2>&1; then
          mc mb myminio/\$$BUCKET;
        else
          echo \"Bucket \$$BUCKET already exists, skipping creation.\";
        fi;
      done;
      "
    network_mode: "service:minio"


networks:
  intro-network: