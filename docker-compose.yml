services:
  minio:
    image: minio/minio:RELEASE.2024-10-02T17-50-41Z
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${ASUSTORE_MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${ASUSTORE_MINIO_ROOT_PASSWORD}
      MINIO_DOMAIN: ${ASUSTORE_MINIO_DOMAIN}
      MINIO_DEFAULT_BUCKETS: ${ASUSTORE_MINIO_BUCKETS}
    user: "0:0"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /volume1/Docker/minio/data:/data
    command: minio server /data --console-address ':9001'
#    entrypoint: >
#      /bin/sh -c "
#      minio server /data --console-address ':9001' &
#      tail -f /dev/null"
    networks:
      - intro-network

  init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: bin/bash
    environment:
      MINIO_BUCKET: "mybucket"
      MINIO_ACCESS_KEY: ${ASUSTORE_MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${ASUSTORE_MINIO_ROOT_PASSWORD}
    command: >
      -c "
      echo ""Bucket: $(printenv MINIO_BUCKET)"";
      echo ""Access Key: $(printenv MINIO_ACCESS_KEY)"";
      echo ""Secret Key: $(printenv MINIO_SECRET)"";
      echo 'Check if minio is up';
      until mc alias set myminio http://minio:9000 $(printenv MINIO_ACCESS_KEY) $(printenv MINIO_SECRET_KEY); do
      echo 'Wait minio to startup...' && sleep 0.1;
      done;
      sleep 5 &&
      mc rm -r --dangerous --force myminio/$(printenv MINIO_BUCKET) || true &&
      mc mb myminio/$(printenv MINIO_BUCKET) &&
      mc policy set download myminio/$(printenv MINIO_BUCKET)
      "
    network_mode: "service:minio"

networks:
  intro-network: